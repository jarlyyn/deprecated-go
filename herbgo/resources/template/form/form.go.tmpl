package  forms

import (
	"github.com/herb-go/herb/ui/validator/formdata"
    "net/http"
    "modules/messages"
)


//{{.Name.Pascal}}FormFieldLabels form field labels map.
var {{.Name.Pascal}}FormFieldLabels = map[string]string{
	"Field1":  "Field 1",
	"Field2":    "Field 2",
}

//{{.Name.Pascal}}Form form struct for {{.Name.Raw}}
type {{.Name.Pascal}}Form struct {
	formdata.Form
	Field1  *string
	Field2    *string
}

//{{.Name.Pascal}}FormID form id of form {{.Name.Raw}}
const {{.Name.Pascal}}FormID = "form{{.Name.LowerWithParentDotSeparated}}"

//New{{.Name.Pascal}}Form create new {{.Name.Raw}} form
func New{{.Name.Pascal}}Form() *{{.Name.Pascal}}Form{
	form:=&{{.Name.Pascal}}Form{}
	form.SetModelID({{.Name.Pascal}}FormID)
	form.SetFieldLabels({{.Name.Pascal}}FormFieldLabels)
	return form
}
//Validate Validate form and return any error if raised.
func (f *{{.Name.Pascal}}Form) Validate() error {
    f.ValidateFieldf(f.Field1 != nil, "Field1", messages.MsgFormFieldRequired) 
    f.ValidateFieldf(f.Field2 != nil, "Field2", messages.MsgFormFieldRequired) 
	if !f.HasError() {
	}
	return nil
}

//InitWithRequest init  {{.Name.Raw}} form  with http request.
func (f *{{.Name.Pascal}}Form) InitWithRequest(r *http.Request) error {
	//Put your request form code here.
	//such as get current user id or ip address.
	return nil
}